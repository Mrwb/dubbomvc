<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.uknower</groupId>
		<artifactId>uknower</artifactId>
		<version>1.0</version>
	</parent>
	<artifactId>user-provider</artifactId>
	<packaging>jar</packaging>
	<name>user-provider</name>
	<url>http://www.uknower.com</url>
	<properties>
		<skip_maven_deploy>false</skip_maven_deploy>
		<!-- mybatis版本号 -->
		<mybatis_version>3.2.7</mybatis_version>
		<mybatis_spring>1.2.2</mybatis_spring>
		<druid_version>1.0.27</druid_version>
		<mysql_version>5.1.31</mysql_version>
		<spring_version>4.3.10.RELEASE</spring_version>
		<hystrix_version>1.5.12</hystrix_version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.uknower</groupId>
			<artifactId>uknower-api</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>com.uknower</groupId>
			<artifactId>uknower-core</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<!-- disconf jar start -->
		<dependency>
			<groupId>com.baidu.disconf</groupId>
			<artifactId>disconf-client</artifactId>
			<version>2.6.36</version>
		</dependency>
		<!-- disconf jar end -->
		<!-- https://mvnrepository.com/artifact/com.netflix.hystrix/hystrix-core -->
		<dependency>
			<groupId>com.netflix.hystrix</groupId>
			<artifactId>hystrix-core</artifactId>
			<version>${hystrix_version}</version>
		</dependency>

		<!-- mysql包 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql_version}</version>
		</dependency>

		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis_version}</version>
		</dependency>
		<!-- mybatis/spring包 -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>${mybatis_spring}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring_version}</version>
		</dependency>
		<!-- rabbitmq -->
		<!-- <dependency> <groupId>org.springframework.amqp</groupId> <artifactId>spring-rabbit</artifactId> 
			<version>1.4.5.RELEASE</version> </dependency> -->
		<!-- iReport JasperReports -->
		<!-- <dependency> <groupId>net.sf.jasperreports</groupId> <artifactId>jasperreports</artifactId> 
			<version>5.6.1</version> </dependency> -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring_version}</version>
		</dependency>
	</dependencies>
	<!--MAVEN打包duboo可执行jar begin -->
	<build>
		<finalName>user-provider</finalName>

		<resources>
			<resource>
				<targetPath>${project.build.directory}/classes</targetPath>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.xml</include>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<!-- 结合com.alibaba.dubbo.container.Main -->
			<!-- <resource> <targetPath>${project.build.directory}/classes/META-INF/spring</targetPath> 
				<directory>src/main/resources/spring</directory> <filtering>true</filtering> 
				<includes> <include>spring-context.xml</include> </includes> </resource> -->
		</resources>

		<pluginManagement>
			<plugins>
				<!-- 解决Maven插件在Eclipse内执行了一系列的生命周期引起冲突 -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->
		<!-- 	<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<classesDirectory>target/classes/</classesDirectory>
					<archive>
						<manifest>
							<mainClass>com.alibaba.dubbo.container.Main</mainClass>
							打包时 MANIFEST.MF文件不记录的时间戳版本
							<useUniqueVersions>false</useUniqueVersions>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
						</manifest>
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<type>jar</type>
							<includeTypes>jar</includeTypes>
							<useUniqueVersions>false</useUniqueVersions>
							<outputDirectory>
								${project.build.directory}/lib
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
						<plugin>  
                <artifactId>maven-dependency-plugin</artifactId>  
                <executions>  
                    <execution>  
                        <id>unpack</id>  
                        <phase>package</phase>  
                        <goals>  
                            <goal>unpack</goal>  
                        </goals>  
                        <configuration>  
                            <artifactItems>  
                                <artifactItem>  
                                    <groupId>com.alibaba</groupId>  
                                    <artifactId>dubbo</artifactId>  
                                    <version>2.5.3</version>  
                                    <outputDirectory>${project.build.directory}/dubbo</outputDirectory>  
                                    <includes>META-INF/assembly/**</includes>  
                                </artifactItem>  
                            </artifactItems>  
                        </configuration>  
                    </execution>  
                </executions>  
            </plugin>  
			<plugin>  
                <artifactId>maven-assembly-plugin</artifactId>  
                <configuration>  
                    <descriptor>src/main/assembly/assembly.xml</descriptor>  
                </configuration>  
                <executions>  
                    <execution>  
                        <id>make-assembly</id>  
                        <phase>package</phase>  
                        <goals>  
                            <goal>single</goal>  
                        </goals>  
                    </execution>  
                </executions>  
            </plugin>  
            
			<!-- docker的maven插件，官网：https://github.com/spotify/docker-maven-plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.12</version>
                <configuration>
                	<dockerHost>http://192.168.2.23:2375</dockerHost>
                    <!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
                    <!-- 详见：https://github.com/spotify/docker-maven-plugin    Invalid repository name ... only [a-z0-9-_.] are allowed-->
                    <imageName>${project.build.finalName}</imageName>
                    <baseImage>java</baseImage>
               <!--      <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint> -->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}-assembly.tar.gz</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
		</plugins>
	</build>
	<!--MAVEN打包duboo可执行jar end -->
</project>
